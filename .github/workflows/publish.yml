name: publish

on:
  push:
    # don't run if pushing tags
    branches-ignore:
    - refs/tags/*

env:
  PROJECT: quarks-secret
  DOCKER_IMAGE_ORG: ghcr.io/cloudfoundry-incubator
  DOCKER_IMAGE_REPOSITORY: quarks-secret

jobs:
  publish:
    runs-on: ubuntu-latest

    # don't run 'publish' on forks
    if: github.repository == 'cloudfoundry-incubator/quarks-secret'
    steps:
    - uses: azure/setup-helm@v1
      with:
        version: v3.3.4
    - uses: actions/checkout@master
    - uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install shared tools
      run: bin/tools

    - name: Setup git
      run: |
        git config --global user.name "CFContainerizationBot"
        git config --global user.email "cf-containerization@cloudfoundry.org"

    - name: Prepare ARTIFACT_VERSION env
      shell: bash
      run: |
        git fetch --unshallow
        GITHUB_ACTION_BRANCH=${GITHUB_REF#refs/heads/}
        . bin/include/versioning
        echo "##[set-output name=version;]$(echo $ARTIFACT_VERSION)"
      id: prepare_version_env

    - name: Vendor go mod dependencies
      run: go mod vendor

    - name: Publish Docker Image
      uses: whoan/docker-build-with-cache-action@v5
      with:
        username: cfcontainerizationbot
        password: "${{ secrets.PERSONAL_ACCESS_TOKEN }}"
        registry: "${{ env.DOCKER_IMAGE_ORG }}"
        image_name: "${{ env.DOCKER_IMAGE_REPOSITORY }}"
        image_tag: "${{ steps.prepare_version_env.outputs.version }}"

    - name: Publish Lite Image
      uses: whoan/docker-build-with-cache-action@v5
      with:
        username: cfcontainerizationbot
        password: "${{ secrets.PERSONAL_ACCESS_TOKEN }}"
        registry: "${{ env.DOCKER_IMAGE_ORG }}"
        image_name: "${{ env.DOCKER_IMAGE_REPOSITORY }}"
        image_tag: "${{ steps.prepare_version_env.outputs.version }}-lite"
        dockerfile: Dockerfile-lite

    - name: Build Helm Chart
      run: |
        echo "Publish Helm Chart for $ARTIFACT_VERSION"
        cp -r "deploy/helm" "helm"
        perl -pi -e "s|repository: .*|repository: $DOCKER_IMAGE_REPOSITORY|g" "helm/$PROJECT/values.yaml"
        perl -pi -e "s|org: .*|org: $DOCKER_IMAGE_ORG|g" "helm/$PROJECT/values.yaml"
        perl -pi -e "s|tag: .*|tag: $ARTIFACT_VERSION|g" "helm/$PROJECT/values.yaml"

        # helm compatible version string
        version=$(echo "$ARTIFACT_VERSION" | sed 's/^v//')
        helm package "helm/$PROJECT" \
          --app-version "$version" \
          --version "$version" \
          --destination "helm"
      env:
        ARTIFACT_VERSION: "${{ steps.prepare_version_env.outputs.version }}"

    - name: Checkout helm chart repo
      uses: actions/checkout@master
      with:
        repository: cloudfoundry-incubator/quarks-helm
        ref: refs/heads/master
        path: updated
        # github personal access token, for pushing commits
        token: ${{ secrets.GH_PASSWORD }}

    - name: Publish Helm Chart
      run: |
        bin/publish-helm-repo

        echo "Tag Github Commit with $ARTIFACT_VERSION"
        git tag -a "$ARTIFACT_VERSION" -m "tag $ARTIFACT_VERSION"
        git push origin "$ARTIFACT_VERSION"
      env:
        ARTIFACT_VERSION: "${{ steps.prepare_version_env.outputs.version }}"
